<?php

/**
 * @file
 * Contains install and update functionality for Akamai.
 */

/**
 * Implements hook_requirements().
 */
function akamai_requirements($phase) {
  $requirements = [];
  if ($phase == 'install') {
    if (!class_exists('\Akamai\Open\EdgeGrid\Authentication')) {
      $requirements['akamai_auth_dependency'] = [
        'title' => t('Akamai'),
        'description' => t('Akamai requires the akamai-open/edgegrid-auth library.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
    if (!class_exists('\Akamai\Open\EdgeGrid\Client')) {
      $requirements['akamai_client_dependency'] = [
        'title' => t('Akamai'),
        'description' => t('Akamai requires the akamai-open/edgegrid-client library.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }

  return $requirements;
}

/**
 * Set edge_cache_tag_header default.
 */
function akamai_update_8001(&$sandbox) {
  $config = \Drupal::service('config.factory')->getEditable('akamai.settings');
  $config->set('edge_cache_tag_header', FALSE);
  $config->save();
}

/**
 * Set purge_urls_with_hostname setting to match previous behavior.
 */
function akamai_update_8002(&$sandbox) {
  $config = \Drupal::service('config.factory')->getEditable('akamai.settings');
  $config->set('purge_urls_with_hostname', TRUE);
  $config->save();
}

/**
 * Set edgescape_support default.
 */
function akamai_update_8003(&$sandbox) {
  $config = \Drupal::service('config.factory')->getEditable('akamai.settings');
  $config->set('edgescape_support', FALSE);
  $config->save();
}
